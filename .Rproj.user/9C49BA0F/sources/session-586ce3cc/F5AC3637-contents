---
title: "LAB_13_24"
output: html_document
date: "2025-10-05"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

 Hecho con gusto por Carla Carolina Pérez Hernández (UAEH)
Alumno: Luis Armando González Arellano

 LABORATORIO - Gráficos en R con ggplot2 

 cargar libreria ggplot2

```{r}
library(ggplot2)

```
 leer data frame
```{r}
green_data <- read.csv("REGESIONES FINALES.csv")

```
 echando un ojo a los datos
```{r}
names(green_data)

```
 colocando objetos
```{r}
p1 <-  ggplot(data = green_data,
             mapping=aes(x=ICE_index,
                         y=GCI_index,))+
  geom_point()+
  geom_text(label= green_data$STATE,
            color= "black",
            size = 4)+
  geom_point()+
  geom_smooth(method = lm,
              se = FALSE,
              fullrange = T)

p1


```
p2 
```{r}
p2 <- ggplot(data = green_data,
             mapping=aes(x=ICE_rank,
                         y=GCI_rank,))+
  geom_point()+
  geom_text(label= green_data$STATE,
            color= "black",
            size = 4)+
  geom_point()+
  geom_smooth(method = lm,
              se = FALSE,
              fullrange = T)

p2

```

p3
```{r}
p3 <- ggplot(data = green_data,
             mapping=aes(x=LPIBE,
                         y=GCI_index,))+
  geom_point()+
  geom_text(label= green_data$STATE,
            color= "black",
            size = 4)+
  geom_point()+
  geom_smooth(method = lm,
              se = FALSE,
              fullrange = T)
p3
```
Correlaciones 

```{r}

library(psych)

library(readr)
correl <- read_csv("correl.csv")
head(correl)

attach(correl)
names(correl)
pairs(correl)
pairs.panels(correl)

```
 correlación de pearson
```{r}
complex_corr <- cor(correl,method = "pearson")
complex_corr 
```

 Calculamos la correlación redondeada
```{r}
complex_corr = round(complex_corr,digits = 2)
complex_corr 

```

#matriz de correlación
```{r}
library(ggcorrplot)
library(ggplot2)



p4 <- ggcorrplot(complex_corr, method = "circle", type = "lower", lab = TRUE)+
  ggtitle("Matriz de correlación")+
  theme_minimal()
p4
```

```{r}
require(ggpubr)
ggpubr :: ggarrange (p1, p2, p3, p4, etiquetas = c ("A", "B", "C" , "D")) 

```
```{r}
library(ggplot2)
require (gridExtra)
```
Crear un grid con las visualizaciones 
```{r}
F1 <- grid.arrange (p1, p2, p3, p4, nrow = 2)
```

